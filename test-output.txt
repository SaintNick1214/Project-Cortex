
> @cortexmemory/sdk@0.4.6 test
> node --experimental-vm-modules node_modules/jest/bin/jest.js --testPathIgnorePatterns=debug --runInBand memory

  console.log
    [dotenv@17.2.3] injecting env (2) from .env.local -- tip: ≡ƒöæ add access controls to secrets: https://dotenvx.com/ops

      at _log (node_modules/dotenv/lib/main.js:142:11)

  console.log
    [dotenv@17.2.3] injecting env (0) from .env.test -- tip: ΓÜÖ∩╕Å  suppress all logs with { quiet: true }

      at _log (node_modules/dotenv/lib/main.js:142:11)

  console.log
    ≡ƒº╣ Purging all databases...

      at MemoryTestCleanup.purgeAll (tests/memory.test.ts:22:13)

(node:54728) ExperimentalWarning: VM Modules is an experimental feature and might change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
  console.log
      Γ£ô Original: "My name is Alexander Johnson and I prefer to be called Alex"

      at Object.<anonymous> (tests/memory.test.ts:1134:17)

  console.log
      Γ£ô Summarized: "User prefers to be called Alex instead of Alexander Johnson."

      at Object.<anonymous> (tests/memory.test.ts:1135:17)

  console.log
    ≡ƒº╣ Purging all databases...

      at MemoryTestCleanup.purgeAll (tests/memory.test.ts:22:13)

FAIL tests/memory.test.ts (11.145 s)
  Memory Convenience API (Layer 3)
    remember()
      ΓêÜ stores both messages in ACID and creates 2 vector memories (60 ms)
      ΓêÜ links vector memories to ACID messages via conversationRef (49 ms)
      ΓêÜ handles embedding generation callback (42 ms)
      ΓêÜ handles content extraction callback (42 ms)
      ΓêÜ applies importance and tags to memories (43 ms)
      ΓêÜ defaults to importance=50 when not specified (41 ms)
    forget()
      ΓêÜ deletes from vector by default (79 ms)
      ΓêÜ deletes from both layers when deleteConversation=true (81 ms)
      ΓêÜ throws error for non-existent memory (61 ms)
    get() with enrichment
      ΓêÜ returns vector only by default (3 ms)
      ΓêÜ enriches with ACID when includeConversation=true (3 ms)
      ΓêÜ handles missing conversation gracefully (12 ms)
      ΓêÜ returns null for non-existent memory (1 ms)
    search() with enrichment
      ΓêÜ returns vector only by default (11 ms)
      ΓêÜ enriches all results when enrichConversation=true (11 ms)
      ΓêÜ handles mixed results (some with conv, some without) (25 ms)
      ΓêÜ preserves search relevance order after enrichment (9 ms)
    store() with smart detection
      ΓêÜ requires conversationRef for source.type=conversation (2 ms)
      ΓêÜ allows standalone for source.type=system (10 ms)
      ΓêÜ delegates to vector.store correctly (12 ms)
    Delegations
      update()
        ΓêÜ delegates to vector.update() (19 ms)
      delete()
        ΓêÜ delegates to vector.delete() (21 ms)
      list()
        ΓêÜ delegates to vector.list() (50 ms)
      count()
        ΓêÜ delegates to vector.count() (97 ms)
      updateMany()
        ΓêÜ delegates to vector.updateMany() (188 ms)
      deleteMany()
        ΓêÜ delegates to vector.deleteMany() (128 ms)
      export()
        ΓêÜ delegates to vector.export() (96 ms)
      archive()
        ΓêÜ delegates to vector.archive() (20 ms)
      getVersion()
        ΓêÜ delegates to vector.getVersion() (21 ms)
      getHistory()
        ΓêÜ delegates to vector.getHistory() (20 ms)
      getAtTimestamp()
        ΓêÜ delegates to vector.getAtTimestamp() (13 ms)
    Integration
      ΓêÜ complete flow: remember ΓåÆ search(enrich) ΓåÆ get(enrich) ΓåÆ forget (76 ms)
      ΓêÜ forget with deleteConversation removes from both layers (76 ms)
    Cross-Layer Validation
      ΓêÜ remember() creates data in both ACID and Vector (246 ms)
      ΓêÜ delete() removes from Vector only, preserves ACID (64 ms)
    Advanced: Real-World Embedding & Recall
      with OpenAI
        ΓêÜ stores multiple facts with real embeddings and summarization (6894 ms)
        ├ù recalls facts using semantic search (not keyword matching) (244 ms)
        ├ù enriches search results with full conversation context (258 ms)
        ΓêÜ validates summarization quality (5 ms)
        ├ù similarity scores are realistic (0-1 range) (355 ms)

  ΓùÅ Memory Convenience API (Layer 3) ΓÇ║ Advanced: Real-World Embedding & Recall ΓÇ║ with OpenAI ΓÇ║ recalls facts using semantic search (not keyword matching)

    [CONVEX Q(memories:search)] [Request ID: 6ebd541c6cade7a7] Server Error
    Uncaught TypeError: r.similar is not a function

      at handler (../convex-dev/memories.ts:175:19)
        Called by client
      at OptimisticQueryResults.queryResult (node_modules/convex/src/browser/sync/optimistic_updates_impl.ts:230:13)
      at BaseConvexClient.localQueryResultByToken (node_modules/convex/src/browser/sync/client.ts:733:40)
      at ConvexClient._transition (node_modules/convex/src/browser/simple_client.ts:316:34)
      at node_modules/convex/src/browser/simple_client.ts:126:34
      at node_modules/convex/src/browser/sync/client.ts:356:7
      at BaseConvexClient.handleTransition (node_modules/convex/src/browser/sync/client.ts:599:7)
      at BaseConvexClient.notifyOnQueryResultChanges (node_modules/convex/src/browser/sync/client.ts:575:10)
      at WebSocketManager.onMessage (node_modules/convex/src/browser/sync/client.ts:454:20)
      at WebSocket.ws.onmessage (node_modules/convex/src/browser/sync/web_socket_manager.ts:406:29)

  ΓùÅ Memory Convenience API (Layer 3) ΓÇ║ Advanced: Real-World Embedding & Recall ΓÇ║ with OpenAI ΓÇ║ enriches search results with full conversation context

    [CONVEX Q(memories:search)] [Request ID: 2045e284dbc034f5] Server Error
    Uncaught TypeError: r.similar is not a function

      at handler (../convex-dev/memories.ts:175:19)
        Called by client
      at OptimisticQueryResults.queryResult (node_modules/convex/src/browser/sync/optimistic_updates_impl.ts:230:13)
      at BaseConvexClient.localQueryResultByToken (node_modules/convex/src/browser/sync/client.ts:733:40)
      at ConvexClient._transition (node_modules/convex/src/browser/simple_client.ts:316:34)
      at node_modules/convex/src/browser/simple_client.ts:126:34
      at node_modules/convex/src/browser/sync/client.ts:356:7
      at BaseConvexClient.handleTransition (node_modules/convex/src/browser/sync/client.ts:599:7)
      at BaseConvexClient.notifyOnQueryResultChanges (node_modules/convex/src/browser/sync/client.ts:575:10)
      at WebSocketManager.onMessage (node_modules/convex/src/browser/sync/client.ts:454:20)
      at WebSocket.ws.onmessage (node_modules/convex/src/browser/sync/web_socket_manager.ts:406:29)

  ΓùÅ Memory Convenience API (Layer 3) ΓÇ║ Advanced: Real-World Embedding & Recall ΓÇ║ with OpenAI ΓÇ║ similarity scores are realistic (0-1 range)

    [CONVEX Q(memories:search)] [Request ID: 6a6b12fbe0670625] Server Error
    Uncaught TypeError: r.similar is not a function

      at handler (../convex-dev/memories.ts:175:19)
        Called by client
      at OptimisticQueryResults.queryResult (node_modules/convex/src/browser/sync/optimistic_updates_impl.ts:230:13)
      at BaseConvexClient.localQueryResultByToken (node_modules/convex/src/browser/sync/client.ts:733:40)
      at ConvexClient._transition (node_modules/convex/src/browser/simple_client.ts:316:34)
      at node_modules/convex/src/browser/simple_client.ts:126:34
      at node_modules/convex/src/browser/sync/client.ts:356:7
      at BaseConvexClient.handleTransition (node_modules/convex/src/browser/sync/client.ts:599:7)
      at BaseConvexClient.notifyOnQueryResultChanges (node_modules/convex/src/browser/sync/client.ts:575:10)
      at WebSocketManager.onMessage (node_modules/convex/src/browser/sync/client.ts:454:20)
      at WebSocket.ws.onmessage (node_modules/convex/src/browser/sync/web_socket_manager.ts:406:29)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 37 passed, 40 total
Snapshots:   0 total
Time:        11.347 s, estimated 12 s
Ran all test suites matching memory.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
